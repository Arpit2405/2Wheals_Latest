@model RoleMenuPermissionModel

<li data-id="@Model.MenuId" class="mb-1">
    <input type="hidden" asp-for="MenuId" />
    <input type="hidden" asp-for="ParentMenuId" />
    <input type="hidden" asp-for="MenuName" />

    @if (Model.Children?.Any() == true)
    {
        <span class="toggle" style="cursor:pointer;" data-bs-toggle="collapse" data-target="#children-@Model.MenuId">📂</span>
    }

    <span class="mr-4">@Model.MenuName</span>

    <span class="ml-2">
        @* Root menus (ParentMenuId == null) → Add only *@
        @if (Model.ParentMenuId == null)
        {
            <input type="checkbox" asp-for="CanView" class="form-check-input parent-view" />
            <label class="form-check-label">View</label>
        }
        else
        {
            <input type="checkbox" asp-for="CanView" class="form-check-input" />
        
            <label class="form-check-label me-2 mr-4">View</label>
            <input type="checkbox" asp-for="CanCreate" class="form-check-input" />
        
            <label class="form-check-label me-2 mr-4">Create</label>
            <input type="checkbox" asp-for="CanEdit" class="form-check-input" />
        
            <label class="form-check-label me-2 mr-4">Edit</label>
            <input type="checkbox" asp-for="CanDelete" class="form-check-input" />
        
            <label class="form-check-label me-2 mr-4">Delete</label>

        }
    </span>

    @if (Model.Children != null && Model.Children.Any())
    {
        <ul id="children-@Model.MenuId" class="collapse ms-4">
            @for (int i = 0; i < Model.Children.Count; i++)
            {
                @Html.EditorFor(m => m.Children[i])
            }
        </ul>
    }
</li>