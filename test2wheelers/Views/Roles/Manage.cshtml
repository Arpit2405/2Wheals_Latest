@model RoleModel

@{
    ViewBag.Title = "Role";
    Layout = "~/Views/Shared/_Admin_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<ol class="breadcrumb mb-0">
    <li class="breadcrumb-item">
        <a href="/"><i class="fas fa-home"></i> Home</a>
    </li>
    <li class="breadcrumb-item active"> @(Model.RoleId == 0 ? "Create Role" : "Edit Role") </li>
</ol>


<section class="content">
    <div class="container-fluid">

        <div class="card card-primary">
            <div class="card-header d-flex justify-content-between align-items-center">

                <div>
                    <h3 class="card-title mb-0">@(Model.RoleId == 0 ? "Create Role" : "Edit Role")</h3>
                </div>

                <a href="javascript:history.back()" class="btn btn-danger ml-auto">
                    <i class="fas fa-arrow-left"></i> Back
                </a>
            </div>
            <div class="card-body">
                <form asp-action="Manage" method="post">

                    <input type="hidden" asp-for="RoleId" />

                    <div class="row g-3">
                        <div class="col-md-3">
                            <label asp-for="RoleName" class="form-label">Role Name</label>
                            <input asp-for="RoleName" class="form-control" />
                            <span asp-validation-for="RoleName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row g-3 mt-2">
                        <div class="col-md-6">
                            <label class="form-label">Permissions</label>

                            <ul id="menuTree" class="sortable">
                                @Html.EditorFor(m => m.Permissions)   @* kicks off recursion *@
                            </ul>

                        </div>
                    </div>



                    <div class="card-footer text-right">
                        <button type="reset" class="btn btn-secondary"><i class="fas fa-undo"></i> Reset</button>
                        <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> @(Model.RoleId == 0 ? "Save" : "Update")</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

@section Scripts {

    <script>
        $(function () {
            toastr.options = { "positionClass": "toast-top-right" };

            @if (TempData["Success"] != null)
            {
                        <text>toastr.success("@TempData["Success"]");</text>
            }

            @if (TempData["Error"] != null)
            {
                        <text>toastr.error("@TempData["Error"]");</text>
            }
        });
    </script>
    <script>
        $(function () {

               // Delete click
               $(document).on("click", ".delete-menu", function () {
                   var menuId = $(this).data("id");
                   var titlemsg = $(this).data("titlemsg");


                   Swal.fire({
                       title: "Are you sure?",
                       text: titlemsg,
                       icon: "warning",
                       showCancelButton: true,
                       confirmButtonColor: "#3085d6",
                       cancelButtonColor: "#d33",
                       confirmButtonText: "Yes, delete it!"
                       }).then((result) => {
                           if (result.isConfirmed) {
                               $.ajax({
                                   url: '/Menu/Delete',   // adjust to your controller
                                   type: 'POST',
                                   data: { id: menuId },
                                   success: function (res) {
                                       if (res.success) {
                                           toastr.success("Menu Deleted successfully!");
                                           setTimeout(function () {
                                               location.reload(); // reload after toast is visible
                                           }, 1500);
                                       } else {
                                           toastr.success("Delete failed: " + res.message);

                                       }
                                   },
                                   error: function () {
                                       alert("Error while deleting.");
                                   }
                               });
                           }
                   });
               });

               $(".toggle").on("click", function () {
                   var target = $(this).data("target");
                   $(target).slideToggle(200); // smooth expand/collapse
               });
           });
    </script>
}
