@{
    ViewBag.Title = "Menu Tree Management";
    Layout = "~/Views/Shared/_Admin_Layout.cshtml";
}

@model List<test2wheelers.Models.RoleMenuPermissionModel>

<style>
    .toggle {
        cursor: pointer;
        margin-right: 5px;
        color: #007bff;
    }
</style>

<ol class="breadcrumb mb-0">
    <li class="breadcrumb-item">
        <a href="/"><i class="fas fa-home"></i> Home</a>
    </li>
    <li class="breadcrumb-item active"> Menu </li>
</ol>


<div class="row">
    <div class="col-12">
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h2 class="mb-4"><i class="fas fa-bars"></i> Menu Tree</h2>

                <!-- Add Root Menu Button -->
                <div class="mb-3 text-right">
                    <button type="button" class="btn btn-success btn-sm px-3"
                            data-bs-toggle="modal"
                            data-bs-target="#menuModal"
                            onclick="openAddRootMenu()">
                        <i class="fa fa-plus"></i> Add Root Menu
                    </button>
                </div>



                <ul id="menuTree" class="sortable ">
                    @foreach (var menu in Model.Where(m => m.ParentMenuId == null))
                    {
                        <li data-id="@menu.MenuId" class="mb-2">
                            @if (menu.Children?.Any() == true)
                            {
                                <span class="toggle" data-target="#children-@menu.MenuId">  📂</span>
                            }
                            <span class="fw-bold">@menu.MenuName</span>

                            <!-- Action buttons for root -->
                            <a class="text-success ms-2"
                               data-bs-toggle="modal"
                               data-bs-target="#menuModal"
                               data-parentid="@menu.MenuId"
                               onclick="openAddMenu(@menu.MenuId)">

                                <i class="fas fa-plus-circle"></i>
                            </a>

                            <a href="javascript:void(0);" class="edit-menu text-warning" data-id="@menu.MenuId" data-name="@menu.MenuName" data-url="@menu.Url" data-icon="@menu.Icon">
                                <i class="fas fa-pencil-alt"></i>
                            </a>
                            <a href="javascript:void(0);" class="delete-menu text-danger ms-2"
                               data-id="@menu.MenuId" data-titlemsg="This menu and all its child menus will also be deleted!" title="Delete">
                                <i class="fas  fa-trash"></i>
                            </a>

                            @if (menu.Children?.Any() == true)
                            {
                                <ul id="children-@menu.MenuId" class="collapse ms-4">
                                    @foreach (var child in menu.Children)
                                    {
                                        @Html.Partial("_TreeNodePartial", child)
                                    }
                                </ul>
                            }
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Add Modal -->
<div class="modal fade" id="menuModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content  shadow-lg rounded-lg">
            <form id="menuForm">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title" id="addBrandsModalLabel">Add Menu</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="MenuId" name="MenuId" value="0" />
                    <input type="hidden" id="ParentMenuId" name="ParentMenuId" value="" />
                    <input type="hidden" id="Action" name="Action" value="" />

                    <div class="mb-3">
                        <label for="MenuName" class="form-label">Menu Name</label>
                        <input type="text" class="form-control" id="MenuName" name="MenuName" required />
                    </div>

                    <div class="mb-3">
                        <label for="Url" class="form-label">Url</label>
                        <input type="text" class="form-control" id="Url" name="Url" />
                    </div>

                    <div class="mb-3">
                        <label for="Icon" class="form-label">Icon</label>
                        <input type="text" class="form-control" id="Icon" name="Icon" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">
                        <i class="fa fa-save"></i> Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Modal -->

<div class="modal fade" id="editMenuModal" tabindex="-1" role="dialog" aria-labelledby="editMenuModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content shadow-lg rounded-lg">

            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="editmenuModalLabel">Edit Menu</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editMenuId" />
                <input type="hidden" id="Action" name="Action" value="" />

                <div class="mb-3">
                    <label for="MenuName" class="form-label">Menu Name</label>
                    <input type="text" class="form-control" id="editMenuName" name="MenuName" required />
                </div>

                <div class="mb-3">
                    <label for="Url" class="form-label">URL</label>
                    <input type="text" class="form-control" id="editMenuUrl" name="Url" />
                </div>

                <div class="mb-3">
                    <label for="Icon" class="form-label">Icon</label>
                    <input type="text" class="form-control" id="editMenuIcon" name="Icon" required />
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="saveEditMenu">
                    <i class="fa fa-save"></i> Update
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(function () {
            toastr.options = { "positionClass": "toast-top-right" };

            @if (TempData["Success"] != null)
            {
                        <text>toastr.success("@TempData["Success"]");</text>
            }

            @if (TempData["Error"] != null)
            {
                        <text>toastr.error("@TempData["Error"]");</text>
            }
        });
    </script>

    <script>

        $(document).on("click", ".edit-menu", function () {
            let id = $(this).data("id");
            let name = $(this).data("name");
            let url = $(this).data("url");
            let icon = $(this).data("icon");

            $("#editMenuId").val(id);
            $("#editMenuName").val(name);
            $("#editMenuUrl").val(url);
            $("#editMenuIcon").val(icon);

            $("#editMenuModal").modal("show");
        });

        $("#saveEditMenu").click(function () {
            let menuModel = {
                MenuId: parseInt($("#editMenuId").val()), // force number
                MenuName: $("#editMenuName").val(),
                Url: $("#editMenuUrl").val(),
                Icon: $("#editMenuIcon").val()
            };

            $.ajax({
                url: '/Menu/Edit',
                type: 'POST',
                contentType: 'application/json', // ✅ must be JSON
                data: JSON.stringify(menuModel),
                success: function (res) {
                    $("#editMenuModal").modal("hide");
                    toastr.success("Menu updated successfully!");
                    setTimeout(function () {
                        location.reload(); // reload after toast is visible
                    }, 1500);
                },
                error: function () {
                    toastr.error("Error: " + xhr.responseText);
                }
            });
        });

        $(function () {

            // Delete click
            $(document).on("click", ".delete-menu", function () {
                var menuId = $(this).data("id");
                var titlemsg = $(this).data("titlemsg");


                Swal.fire({
                    title: "Are you sure?",
                    text: titlemsg,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/Menu/Delete',   // adjust to your controller
                                type: 'POST',
                                data: { id: menuId },
                                success: function (res) {
                                    if (res.success) {
                                        toastr.success("Menu Deleted successfully!");
                                        setTimeout(function () {
                                            location.reload(); // reload after toast is visible
                                        }, 1500);
                                    } else {
                                        toastr.success("Delete failed: " + res.message);

                                    }
                                },
                                error: function () {
                                    alert("Error while deleting.");
                                }
                            });
                        }
                });
            });

            $(".toggle").on("click", function () {
                var target = $(this).data("target");
                $(target).slideToggle(200); // smooth expand/collapse
            });
        });

        function openAddRootMenu() {
            $("#MenuId").val(0);                // new menu
            $("#ParentMenuId").val("");         // root menu
            $("#MenuName").val("");             // clear input
            $("#Action").val("InsertParent");
            $("#menuModal").modal('show');
        }

        function openAddMenu(MenuId) {
            $("#MenuId").val(0);                // new menu
            $("#ParentMenuId").val(MenuId);         // root menu
            $("#MenuName").val("");             // clear input
             $("#Action").val("InsertChild");
            $(".modal-title").text("Add Menu");
            $("#menuModal").modal('show');
        }

        $("#menuForm").submit(function (e) {
            e.preventDefault();

            $.ajax({
                url: '/Menu/SaveMenu',   // controller action
                type: 'POST',
                data: $(this).serialize(),
                success: function (menu) {
                    // Close modal
                    $("#menuModal").modal('hide');


                    toastr.success("Menu added successfully!");
                    setTimeout(function () {
                        location.reload(); // reload after toast is visible
                    }, 1500);
                    //toastr.success("Menu added successfully!");
                }
            });
        });

    </script>
}